# .progress = list(type = "text", interval = 1), # for a progress bar
fireNULL = list(startTime = 1,
returnInterval = 1,
doAgeMapping = FALSE,
.statsInitialTime = 1
),
initBaseMaps = list(),
fireDataPrep = list()
)
modules <- list("initBaseMaps","fireDataPrep","fireNull")
objects <- list(LCC05X=LCC05,shpStudyRegionX=shpStudyRegion)
paths <- list(
cachePath = file.path(outputDir, "cache"),
modulePath = file.path("."), #SGC: is this really a sensible default?
inputPath = inputDir,
outputPath = outputDir
)
mySim <- simInit(times = times, params = parameters, modules = modules,
objects = objects, paths = paths)
#nxtSim<-spades(mySim)
spades(mySim)
Q
mySim$LCC05
??memory
ncell(mySim$LCC05)
inMemory(mySim$LCC05)
?readAll
library(igraph)
library(rgdal)
library(raster)
library(magrittr)
library(SpaDES)
baseDir<-file.path("~","Dropbox","SpaDES","Data")
LCC05 <-SpaDES::rasterToMemory(file.path(baseDir,
"LandCoverOfCanada2005_V1_4",
"LCC2005_V1_4a.tif")
)
foo<-path.expand(file.path(baseDir,"LandWEB","shp")) #somebody does not like ~s
shpStudyRegion <- readOGR(foo,"shpLandweb")
shpStudyRegion$fireReturnInterval <- shpStudyRegion$LTHRC #because of course it does.
rm(foo)
inputDir <- file.path(tempdir(), "inputs") %>% checkPath(create = TRUE)
outputDir <- file.path(tempdir(), "outputs")
times <- list(start = 0, end = 10)
parameters <- list(
# .progress = list(type = "text", interval = 1), # for a progress bar
fireNULL = list(startTime = 1,
returnInterval = 1,
doAgeMapping = FALSE,
.statsInitialTime = 1
),
initBaseMaps = list(),
fireDataPrep = list()
)
modules <- list("initBaseMaps","fireDataPrep","fireNull")
objects <- list(LCC05X=LCC05,shpStudyRegionX=shpStudyRegion)
paths <- list(
cachePath = file.path(outputDir, "cache"),
modulePath = file.path("."), #SGC: is this really a sensible default?
inputPath = inputDir,
outputPath = outputDir
)
mySim <- simInit(times = times, params = parameters, modules = modules,
objects = objects, paths = paths)
#nxtSim<-spades(mySim)
spades(mySim)
inMemory(sim$LCC05X)
inMemory(sim$LCC05)
sim$LCC05[]<-sim$LCC05[]
inMemory(sim$LCC05)
mySim <- simInit(times = times, params = parameters, modules = modules,
objects = objects, paths = paths)
spades(mySim)
inMemory(sim$rstBurnProb)
Plot(sim$rstBurnProb)
ncell(sim$rstBurnProb)
sim$rstBurnProb
sim$LCC05
Plot(sim$rstBurnProb)
Plot(sim$rstBurnProb,new=TRUE)
N
N
N<-sum(!is.na(sim$rstBurnProb[]))
N<-N-length(which(sim$rstBurnProb[]==1))
N
sim$nBurnableCells<-N
length(sim$burnLoci)
library(igraph)
library(rgdal)
library(raster)
library(magrittr)
library(SpaDES)
baseDir<-file.path("~","Dropbox","SpaDES","Data")
LCC05 <-SpaDES::rasterToMemory(file.path(baseDir,
"LandCoverOfCanada2005_V1_4",
"LCC2005_V1_4a.tif")
)
foo<-path.expand(file.path(baseDir,"LandWEB","shp")) #somebody does not like ~s
shpStudyRegion <- readOGR(foo,"shpLandweb")
shpStudyRegion$fireReturnInterval <- shpStudyRegion$LTHRC #because of course it does.
rm(foo)
inputDir <- file.path(tempdir(), "inputs") %>% checkPath(create = TRUE)
outputDir <- file.path(tempdir(), "outputs")
tmpDir <- file.path("/tmp","SpaDES") %>% checkPath(create=TRUE)
times <- list(start = 0, end = 10)
parameters <- list(
# .progress = list(type = "text", interval = 1), # for a progress bar
fireNULL = list(startTime = 1,
returnInterval = 1,
doAgeMapping = FALSE,
.statsInitialTime = 1
),
initBaseMaps = list(),
fireDataPrep = list()
)
modules <- list("initBaseMaps","fireDataPrep","fireNull")
objects <- list(LCC05X=LCC05,shpStudyRegionX=shpStudyRegion)
paths <- list(
cachePath = file.path(tmpDir, "cache"),
modulePath = file.path("."), #SGC: is this really a sensible default?
inputPath = inputDir,
outputPath = outputDir
)
mySim <- simInit(times = times, params = parameters, modules = modules,
objects = objects, paths = paths)
#nxtSim<-spades(mySim)
spades(mySim)
library(igraph)
library(rgdal)
library(raster)
library(magrittr)
library(SpaDES)
baseDir<-file.path("~","Dropbox","SpaDES","Data")
LCC05 <-SpaDES::rasterToMemory(file.path(baseDir,
"LandCoverOfCanada2005_V1_4",
"LCC2005_V1_4a.tif")
)
foo<-path.expand(file.path(baseDir,"LandWEB","shp")) #somebody does not like ~s
shpStudyRegion <- readOGR(foo,"shpLandweb")
shpStudyRegion$fireReturnInterval <- shpStudyRegion$LTHRC #because of course it does.
rm(foo)
inputDir <- file.path(tempdir(), "inputs") %>% checkPath(create = TRUE)
outputDir <- file.path(tempdir(), "outputs")
tmpDir <- file.path("/tmp","SpaDES") %>% checkPath(create=TRUE)
times <- list(start = 0, end = 10)
parameters <- list(
# .progress = list(type = "text", interval = 1), # for a progress bar
fireNULL = list(startTime = 1,
returnInterval = 1,
doAgeMapping = FALSE,
.statsInitialTime = 1
),
initBaseMaps = list(),
fireDataPrep = list()
)
modules <- list("initBaseMaps","fireDataPrep","fireNull")
objects <- list(LCC05X=LCC05,shpStudyRegionX=shpStudyRegion)
paths <- list(
cachePath = file.path(tmpDir, "cache"),
modulePath = file.path("."), #SGC: is this really a sensible default?
inputPath = inputDir,
outputPath = outputDir
)
mySim <- simInit(times = times, params = parameters, modules = modules,
objects = objects, paths = paths)
#nxtSim<-spades(mySim)
Q
?masl
?mask
library(igraph)
library(rgdal)
library(raster)
library(magrittr)
library(SpaDES)
baseDir<-file.path("~","Dropbox","SpaDES","Data")
LCC05 <-SpaDES::rasterToMemory(file.path(baseDir,
"LandCoverOfCanada2005_V1_4",
"LCC2005_V1_4a.tif")
)
foo<-path.expand(file.path(baseDir,"LandWEB","shp")) #somebody does not like ~s
shpStudyRegion <- readOGR(foo,"shpLandweb")
shpStudyRegion$fireReturnInterval <- shpStudyRegion$LTHRC #because of course it does.
rm(foo)
inputDir <- file.path(tempdir(), "inputs") %>% checkPath(create = TRUE)
outputDir <- file.path(tempdir(), "outputs")
tmpDir <- file.path("/tmp","SpaDES") %>% checkPath(create=TRUE)
times <- list(start = 0, end = 10)
parameters <- list(
# .progress = list(type = "text", interval = 1), # for a progress bar
fireNULL = list(startTime = 1,
returnInterval = 1,
doAgeMapping = FALSE,
.statsInitialTime = 1
),
initBaseMaps = list(),
fireDataPrep = list()
)
modules <- list("initBaseMaps","fireDataPrep","fireNull")
objects <- list(LCC05X=LCC05,shpStudyRegionX=shpStudyRegion)
paths <- list(
cachePath = file.path(tmpDir, "cache"),
modulePath = file.path("."), #SGC: is this really a sensible default?
inputPath = inputDir,
outputPath = outputDir
)
mySim <- simInit(times = times, params = parameters, modules = modules,
objects = objects, paths = paths)
#nxtSim<-spades(mySim)
spades(mySim)
library(igraph)
library(rgdal)
library(raster)
library(magrittr)
library(archivist)
library(SpaDES)
baseDir<-file.path("~","Dropbox","SpaDES","Data")
LCC05 <-SpaDES::rasterToMemory(file.path(baseDir,
"LandCoverOfCanada2005_V1_4",
"LCC2005_V1_4a.tif")
)
foo<-path.expand(file.path(baseDir,"LandWEB","shp")) #somebody does not like ~s
shpStudyRegion <- readOGR(foo,"shpLandweb")
shpStudyRegion$fireReturnInterval <- shpStudyRegion$LTHRC #because of course it does.
rm(foo)
inputDir <- file.path(tempdir(), "inputs") %>% checkPath(create = TRUE)
outputDir <- file.path(tempdir(), "outputs")
tmpDir <- file.path("/tmp","SpaDES") %>% checkPath(create=TRUE)
times <- list(start = 0, end = 10)
parameters <- list(
# .progress = list(type = "text", interval = 1), # for a progress bar
fireNULL = list(startTime = 1,
returnInterval = 1,
doAgeMapping = FALSE,
.statsInitialTime = 1
),
initBaseMaps = list(),
fireDataPrep = list()
)
modules <- list("initBaseMaps","fireDataPrep","fireNull")
objects <- list(LCC05X=LCC05,shpStudyRegionX=shpStudyRegion)
paths <- list(
cachePath = file.path(tmpDir, "cache"),
modulePath = file.path("."), #SGC: is this really a sensible default?
inputPath = inputDir,
outputPath = outputDir
)
mySim <- simInit(times = times, params = parameters, modules = modules,
objects = objects, paths = paths)
archivist::createLocalRepo(cachePath(mySim))
#nxtSim<-spades(mySim)
spades(mySim)
Plot(sim$LCC05)
cleaerPLot()
clearPLot()
clearPlot()
N
N
N<- N - length(which(sim$rstBurnProb[] == 0))
N
N
inMemory(sim$rstBurnProb)
inMemory(sim$rstCurrentBurns)
inMemory(sim$rstCurrentBurn)
clearPlot()
library(igraph)
library(rgdal)
library(raster)
library(magrittr)
library(archivist)
library(SpaDES)
baseDir<-file.path("~","Dropbox","SpaDES","Data")
LCC05 <-SpaDES::rasterToMemory(file.path(baseDir,
"LandCoverOfCanada2005_V1_4",
"LCC2005_V1_4a.tif")
)
foo<-path.expand(file.path(baseDir,"LandWEB","shp")) #somebody does not like ~s
shpStudyRegion <- readOGR(foo,"shpLandweb")
shpStudyRegion$fireReturnInterval <- shpStudyRegion$LTHRC #because of course it does.
rm(foo)
parentModule <- "fireNull" #which module should hold the cached data for GitHub
#this would normally be a parent module, hence the name
inputDir <- file.path(tempdir(), "inputs") %>% checkPath(create = TRUE)
outputDir <- file.path(tempdir(), "outputs")
moduleDir <- file.path(".")
cacheDir <- filepath(moduleDir,parentModule,"data", "cache") %>% checkPath(create = TRUE)
times <- list(start = 0, end = 10)
parameters <- list(
# .progress = list(type = "text", interval = 1), # for a progress bar
fireNULL = list(startTime = 1,
returnInterval = 1,
doAgeMapping = FALSE,
.statsInitialTime = 1
),
initBaseMaps = list(),
fireDataPrep = list()
)
modules <- list("initBaseMaps","fireDataPrep","fireNull")
objects <- list(LCC05X=LCC05,shpStudyRegionX=shpStudyRegion)
paths <- list(
modulePath = moduleDir,
cachePath = cacheDir,
inputPath = inputDir,
outputPath = outputDir
)
mySim <- simInit(times = times, params = parameters, modules = modules,
objects = objects, paths = paths)
archivist::createLocalRepo(cachePath(mySim))
#nxtSim<-spades(mySim)
cacheDir
library(igraph)
library(rgdal)
library(raster)
library(magrittr)
library(archivist)
library(SpaDES)
baseDir<-file.path("~","Dropbox","SpaDES","Data")
LCC05 <-SpaDES::rasterToMemory(file.path(baseDir,
"LandCoverOfCanada2005_V1_4",
"LCC2005_V1_4a.tif")
)
foo<-path.expand(file.path(baseDir,"LandWEB","shp")) #somebody does not like ~s
shpStudyRegion <- readOGR(foo,"shpLandweb")
shpStudyRegion$fireReturnInterval <- shpStudyRegion$LTHRC #because of course it does.
rm(foo)
parentModule <- "fireNull" #which module should hold the cached data for GitHub
#this would normally be a parent module, hence the name
inputDir <- file.path(tempdir(), "inputs") %>% checkPath(create = TRUE)
outputDir <- file.path(tempdir(), "outputs")
moduleDir <- file.path(".")
cacheDir <- file.path(moduleDir,parentModule,"data", "cache") %>% checkPath(create = TRUE)
times <- list(start = 0, end = 10)
parameters <- list(
# .progress = list(type = "text", interval = 1), # for a progress bar
fireNULL = list(startTime = 1,
returnInterval = 1,
doAgeMapping = FALSE,
.statsInitialTime = 1
),
initBaseMaps = list(),
fireDataPrep = list()
)
modules <- list("initBaseMaps","fireDataPrep","fireNull")
objects <- list(LCC05X=LCC05,shpStudyRegionX=shpStudyRegion)
paths <- list(
modulePath = moduleDir,
cachePath = cacheDir,
inputPath = inputDir,
outputPath = outputDir
)
mySim <- simInit(times = times, params = parameters, modules = modules,
objects = objects, paths = paths)
archivist::createLocalRepo(cachePath(mySim))
#nxtSim<-spades(mySim)
spades(mySim)
0.95**5
0.95**10
Plot(sim$rstBurnProb)
inMemory(sim$rstBurnProb)
inMemory(sim$rstCurrentBurn)
N
inMemory(sim$rstCurrentBurn)
length(sim$burnLoci)
time(sim)
inMemory(sim$rstCurrentBurn)
time(sim)
time(sim)
inMemory(sim$rstCurrentBurn)
inMemory(sim$rstCurrentBurn)
Plot(sim$rstCurrentBurn)
C
time(sim)
inMemory(sim$rstCurrentBurn)
time(sim)
objects(mySim)
mySim$fireNullStats
inMemory(mySim$rstBurnProb)
inMemory(mySim$rstCurrentBurn)
library(igraph)
library(rgdal)
library(raster)
library(magrittr)
library(archivist)
library(SpaDES)
baseDir<-file.path("~","Dropbox","SpaDES","Data")
LCC05 <-SpaDES::rasterToMemory(file.path(baseDir,
"LandCoverOfCanada2005_V1_4",
"LCC2005_V1_4a.tif")
)
foo<-path.expand(file.path(baseDir,"LandWEB","shp")) #somebody does not like ~s
shpStudyRegion <- readOGR(foo,"shpLandweb")
shpStudyRegion$fireReturnInterval <- shpStudyRegion$LTHRC #because of course it does.
rm(foo)
parentModule <- "fireNull" #which module should hold the cached data for GitHub
#this would normally be a parent module, hence the name
inputDir <- file.path(tempdir(), "inputs") %>% checkPath(create = TRUE)
outputDir <- file.path(tempdir(), "outputs")
moduleDir <- file.path(".")
cacheDir <- file.path(moduleDir,parentModule,"data", "cache") %>% checkPath(create = TRUE)
times <- list(start = 0, end = 10)
parameters <- list(
# .progress = list(type = "text", interval = 1), # for a progress bar
fireNULL = list(startTime = 1,
returnInterval = 1,
doAgeMapping = FALSE,
.statsInitialTime = 1
),
initBaseMaps = list(),
fireDataPrep = list()
)
modules <- list("initBaseMaps","fireDataPrep","fireNull")
objects <- list(LCC05X=LCC05,shpStudyRegionX=shpStudyRegion)
paths <- list(
modulePath = moduleDir,
cachePath = cacheDir,
inputPath = inputDir,
outputPath = outputDir
)
mySim <- simInit(times = times, params = parameters, modules = modules,
objects = objects, paths = paths)
archivist::createLocalRepo(cachePath(mySim))
#nxtSim<-spades(mySim)
library(igraph)
library(rgdal)
library(raster)
library(magrittr)
library(archivist)
library(SpaDES)
baseDir<-file.path("~","Dropbox","SpaDES","Data")
LCC05 <-SpaDES::rasterToMemory(file.path(baseDir,
"LandCoverOfCanada2005_V1_4",
"LCC2005_V1_4a.tif")
)
foo<-path.expand(file.path(baseDir,"LandWEB","shp")) #somebody does not like ~s
shpStudyRegion <- readOGR(foo,"shpLandweb")
shpStudyRegion$fireReturnInterval <- shpStudyRegion$LTHRC #because of course it does.
rm(foo)
parentModule <- "fireNull" #which module should hold the cached data for GitHub
#this would normally be a parent module, hence the name
inputDir <- file.path(tempdir(), "inputs") %>% checkPath(create = TRUE)
outputDir <- file.path(tempdir(), "outputs")
moduleDir <- file.path(".")
cacheDir <- file.path(moduleDir,parentModule,"data", "cache") %>% checkPath(create = TRUE)
times <- list(start = 0, end = 10)
parameters <- list(
# .progress = list(type = "text", interval = 1), # for a progress bar
fireNULL = list(startTime = 1,
returnInterval = 1,
doAgeMapping = FALSE,
.statsInitialTime = 1
),
initBaseMaps = list(),
fireDataPrep = list()
)
modules <- list("initBaseMaps","fireDataPrep","fireNull")
objects <- list(LCC05X=LCC05,shpStudyRegionX=shpStudyRegion)
paths <- list(
modulePath = moduleDir,
cachePath = cacheDir,
inputPath = inputDir,
outputPath = outputDir
)
mySim <- simInit(times = times, params = parameters, modules = modules,
objects = objects, paths = paths)
archivist::createLocalRepo(cachePath(mySim))
#nxtSim<-spades(mySim)
nxtSim<-spades(mySim)
library(igraph)
library(rgdal)
library(raster)
library(magrittr)
library(archivist)
library(SpaDES)
baseDir<-file.path("~","Dropbox","SpaDES","Data")
LCC05 <-SpaDES::rasterToMemory(file.path(baseDir,
"LandCoverOfCanada2005_V1_4",
"LCC2005_V1_4a.tif")
)
foo<-path.expand(file.path(baseDir,"LandWEB","shp")) #somebody does not like ~s
shpStudyRegion <- readOGR(foo,"shpLandweb")
shpStudyRegion$fireReturnInterval <- shpStudyRegion$LTHRC #because of course it does.
rm(foo)
parentModule <- "fireNull" #which module should hold the cached data for GitHub
#this would normally be a parent module, hence the name
inputDir <- file.path(tempdir(), "inputs") %>% checkPath(create = TRUE)
outputDir <- file.path(tempdir(), "outputs")
moduleDir <- file.path(".")
cacheDir <- file.path(moduleDir,parentModule,"data", "cache") %>% checkPath(create = TRUE)
times <- list(start = 0, end = 10)
parameters <- list(
# .progress = list(type = "text", interval = 1), # for a progress bar
fireNULL = list(startTime = 1,
returnInterval = 1,
doAgeMapping = FALSE,
.statsInitialTime = 1
),
initBaseMaps = list(),
fireDataPrep = list()
)
modules <- list("initBaseMaps","fireDataPrep","fireNull")
objects <- list(LCC05X=LCC05,shpStudyRegionX=shpStudyRegion)
paths <- list(
modulePath = moduleDir,
cachePath = cacheDir,
inputPath = inputDir,
outputPath = outputDir
)
mySim <- simInit(times = times, params = parameters, modules = modules,
objects = objects, paths = paths)
archivist::createLocalRepo(cachePath(mySim))
#nxtSim<-spades(mySim)
clearPlot()
nxtSim<-spades(mySim)
