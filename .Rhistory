ecoregionBiomass <- biomassAttributes_kNN(speciesLayers = speciesLayers,
biomassLayer = biomassLayer,
SALayer = SALayer,
ecoregionMap = biggerEcoMapRaster)
outputPartial
output
outputPartial
output <- dplyr::left_join(output, outputPartial, by = c("ecoregion", "species")) %>%
data.table
output
output <- data.table(expand.grid(ecoregion = as.numeric(unique(getValues(ecoregionMap))),
species = speciess))[!is.na(ecoregion),]
output <- dplyr::left_join(output, outputPartial, by = c("ecoregion", "species")) %>%
data.table
output
output <- data.table(expand.grid(ecoregion = as.numeric(unique(getValues(ecoregionMap))),
species = as.character(speciess)))[!is.na(ecoregion),]
output <- dplyr::left_join(output, outputPartial, by = c("ecoregion", "species")) %>%
data.table
output <- data.table(expand.grid(ecoregion = as.numeric(unique(getValues(ecoregionMap))),
species = as.character(speciess)))[!is.na(ecoregion),]
summary(output)
class(output$ecoregion)
class(output$species)
output <- data.table(expand.grid(ecoregion = as.numeric(unique(getValues(ecoregionMap))),
species = speciess))[!is.na(ecoregion),][,species:=as.character(species)]
class(output$species)
output <- dplyr::left_join(output, outputPartial, by = c("ecoregion", "species")) %>%
data.table
output
rm(list=ls())
dataPath <- "~/GitHub/LandWeb/landWebParent/data"
speciesEcoregionTable <- readRDS(file.path(dataPath, "speciesEcoregionTable.rds"))
ecoregionMap <- readRDS(file.path(dataPath, "ecoregionmap.rds"))
specieslayers <- readRDS(file.path(dataPath, "specieslayers.rds"))
#
#
septable <- readRDS(file.path(dataPath, "septable.rds"))
# sepmaps <- speciesSEP$speciesAbundanceMaps
names(septable) <- c("ecoregion", "species", "SEP")
septable[, SEP:=round(SEP, 2)]
#
#
speciesEcoregionTable <- left_join(speciesEcoregionTable, septable, by = c("ecoregion", "species")) %>%
data.table
#
speciesEcoregionTable[SEP==0, ':='(maxBiomass = 0, maxANPP = 0)]
#
NON_NAdata <- speciesEcoregionTable[!is.na(maxBiomass),]
#
NAdata <- speciesEcoregionTable[is.na(maxBiomass),]
#
# # replace NA values with ecoregion  value
source('~/GitHub/landwebNRV/landwebNRV/R/biomassAttributes_kNN_biggerEcoAddition.R')
#
standAgeMap <- raster(file.path(dataPath, "NFI_MODIS250m_kNN_Structure_Stand_Age_v0.tif"))
biomassMap <- raster(file.path(dataPath, "NFI_MODIS250m_kNN_Structure_Biomass_TotalLiveAboveGround_v0.tif"))
ecoRegion <- raster::shapefile(file.path(dataPath, "ecoregions.shp"))
# biggerEcoMapRaster <- readRDS(file.path(dataPath, "biggerecomapraster.rds"))
# subEcoregion <- readRDS(file.path(dataPath, "subecoregion.rds"))
# SALayer <- standAgeMap
# biomassLayer <- biomassMap
# speciesLayers <- specieslayers
dd <- biomassAttributes_kNN_biggerEcoAddition(speciesLayers = specieslayers,
biomassLayer = biomassMap,
SALayer = standAgeMap,
ecoregionMap = ecoregionMap,
biggerEcoMap = ecoRegion,
NAData = NAdata)
NAdata
rm(list=ls())
dataPath <- "~/GitHub/LandWeb/landWebParent/data"
speciesEcoregionTable <- readRDS(file.path(dataPath, "speciesEcoregionTable.rds"))
ecoregionMap <- readRDS(file.path(dataPath, "ecoregionmap.rds"))
specieslayers <- readRDS(file.path(dataPath, "specieslayers.rds"))
#
#
septable <- readRDS(file.path(dataPath, "septable.rds"))
# sepmaps <- speciesSEP$speciesAbundanceMaps
names(septable) <- c("ecoregion", "species", "SEP")
septable[, SEP:=round(SEP, 2)]
septable
speciesEcoregionTable
speciesEcoregionTable <- left_join(speciesEcoregionTable, septable, by = c("ecoregion", "species")) %>%
data.table
speciesEcoregionTable
speciesEcoregionTable[SEP==0, ':='(maxBiomass = 0, maxANPP = 0)]
NON_NAdata <- speciesEcoregionTable[!is.na(maxBiomass),]
#
NAdata <- speciesEcoregionTable[is.na(maxBiomass),]
NAdata
source('~/GitHub/landwebNRV/landwebNRV/R/biomassAttributes_kNN_biggerEcoAddition.R')
#
standAgeMap <- raster(file.path(dataPath, "NFI_MODIS250m_kNN_Structure_Stand_Age_v0.tif"))
biomassMap <- raster(file.path(dataPath, "NFI_MODIS250m_kNN_Structure_Biomass_TotalLiveAboveGround_v0.tif"))
ecoRegion <- raster::shapefile(file.path(dataPath, "ecoregions.shp"))
# biggerEcoMapRaster <- readRDS(file.path(dataPath, "biggerecomapraster.rds"))
# subEcoregion <- readRDS(file.path(dataPath, "subecoregion.rds"))
# SALayer <- standAgeMap
# biomassLayer <- biomassMap
# speciesLayers <- specieslayers
dd <- biomassAttributes_kNN_biggerEcoAddition(speciesLayers = specieslayers,
biomassLayer = biomassMap,
SALayer = standAgeMap,
ecoregionMap = ecoregionMap,
biggerEcoMap = ecoRegion,
NAData = NAdata)
rm(list=ls())
dataPath <- "~/GitHub/LandWeb/landWebParent/data"
speciesEcoregionTable <- readRDS(file.path(dataPath, "speciesEcoregionTable.rds"))
ecoregionMap <- readRDS(file.path(dataPath, "ecoregionmap.rds"))
specieslayers <- readRDS(file.path(dataPath, "specieslayers.rds"))
#
#
septable <- readRDS(file.path(dataPath, "septable.rds"))
# sepmaps <- speciesSEP$speciesAbundanceMaps
names(septable) <- c("ecoregion", "species", "SEP")
septable[, SEP:=round(SEP, 2)]
#
#
speciesEcoregionTable <- left_join(speciesEcoregionTable, septable, by = c("ecoregion", "species")) %>%
data.table
#
speciesEcoregionTable[SEP==0, ':='(maxBiomass = 0, maxANPP = 0)]
#
NON_NAdata <- speciesEcoregionTable[!is.na(maxBiomass),]
#
NAdata <- speciesEcoregionTable[is.na(maxBiomass),]
#
# # replace NA values with ecoregion  value
source('~/GitHub/landwebNRV/landwebNRV/R/biomassAttributes_kNN_biggerEcoAddition.R')
#
standAgeMap <- raster(file.path(dataPath, "NFI_MODIS250m_kNN_Structure_Stand_Age_v0.tif"))
biomassMap <- raster(file.path(dataPath, "NFI_MODIS250m_kNN_Structure_Biomass_TotalLiveAboveGround_v0.tif"))
ecoRegion <- raster::shapefile(file.path(dataPath, "ecoregions.shp"))
biggerEcoMapRaster <- readRDS(file.path(dataPath, "biggerecomapraster.rds"))
subEcoregion <- readRDS(file.path(dataPath, "subecoregion.rds"))
SALayer <- standAgeMap
biomassLayer <- biomassMap
speciesLayers <- specieslayers
biggerEcoMapRaster_ST <- crop(biggerEcoMapRaster, subEcoregion)
biggerEcoMapRaster_ST <- suppressWarnings(mask(biggerEcoMapRaster_ST, subEcoregion))
ecodistrictEcoregionTable <- data.table(ecoregion = getValues(subEcoregion),
biggerEcoregion = getValues(biggerEcoMapRaster_ST))[!is.na(ecoregion),]
#check whether one district has more than one ecoregion, which is not correct
ecodistrictEcoregionTable[,totLength:=length(biggerEcoregion), by = ecoregion]
ecodistrictEcoregionTable[,ecoLength:=length(totLength), by = c("biggerEcoregion", "ecoregion")]
ecodistrictEcoregionTable[, percentage:=ecoLength/totLength]
ecodistrictEcoregionTable[, maxPercent:=max(percentage), by = ecoregion]
ecodistrictEcoregionTable <- ecodistrictEcoregionTable[percentage == maxPercent, .(biggerEcoregion, ecoregion)] %>%
unique(., by = c("biggerEcoregion", "ecoregion"))
source('~/GitHub/landwebNRV/landwebNRV/R/biomassAttributes_kNN.R')
ecoregionBiomass <- biomassAttributes_kNN(speciesLayers = speciesLayers,
biomassLayer = biomassLayer,
SALayer = SALayer,
ecoregionMap = biggerEcoMapRaster)
class(output$ecoregion)
class(output$species)
ecoregionBiomass
setnames(ecoregionBiomass, "ecoregion", "biggerEcoregion")
ecoregionBiomass
NAData <- setkey(NAData, ecoregion)[setkey(ecodistrictEcoregionTable, ecoregion), nomatch = 0]
NAdata
NAData <- NAdata
NAData <- setkey(NAData, ecoregion)[setkey(ecodistrictEcoregionTable, ecoregion), nomatch = 0]
NAData
dplyr::left_join(NAData[,.(biggerEcoregion, ecoregion, species, SEP)], ecoregionBiomass,
by = c("biggerEcoregion", "species")) %>%
data.table
NAData
class(NAData$species)
NAData[,species:=as.character(species)]
NAData
dplyr::left_join(NAData[,.(biggerEcoregion, ecoregion, species, SEP)], ecoregionBiomass,
by = c("biggerEcoregion", "species")) %>%
data.table
NAData <- dplyr::left_join(NAData[,.(biggerEcoregion, ecoregion, species, SEP)], ecoregionBiomass,
by = c("biggerEcoregion", "species")) %>%
data.table
NAData
NAData <- NAData
dd <- NAData
dd
NAdata1 <- dd$addData[is.na(maxBiomass),.(ecoregion, species, maxBiomass, maxANPP, SEP)]
NAdata1 <- dd[is.na(maxBiomass),.(ecoregion, species, maxBiomass, maxANPP, SEP)]
NAdata1
range(NAdata1$SEP)
ecoZone
ecoZone <- raster::shapefile(file.path(dataPath, "ecozones.shp"))
ecoZone
names(ecoZone@data)[grep("ECOZONE",names(biggerEcoMap1@data))] <- "ECOREGION"
names(ecoZone@data)[grep("ECOZONE",names(ecoZone@data))] <- "ECOREGION"
ecoZone
NAdata1
ecozoneValues <- biomassAttributes_kNN_biggerEcoAddition(speciesLayers = specieslayers,
biomassLayer = biomassMap,
SALayer = standAgeMap,
ecoregionMap = ecoregionMap,
biggerEcoMap = ecoZone,
NAData = NAdata1)
source('~/GitHub/landwebNRV/landwebNRV/R/biomassAttributes_kNN_biggerEcoAddition.R')
ecozoneValues <- biomassAttributes_kNN_biggerEcoAddition(speciesLayers = specieslayers,
biomassLayer = biomassMap,
SALayer = standAgeMap,
ecoregionMap = ecoregionMap,
biggerEcoMap = ecoZone,
NAData = NAdata1)
outputPartial
ecozoneValues
rm(list=ls())
library(SpaDES)
library(raster)
library(data.table)
library(dplyr)
objects <- list(studyArea = "a",
successionTimeStep = 4)
parameters <- list()
times <- list(start = 0, end = 8)
modules <- list("landWebParent")
path <- list(modulePath = file.path("~/GitHub/LandWeb"),
outputPath="~/output")
mySim <- simInit(times=times, params=parameters, modules=modules,
objects=objects, paths=path)
rm(list=ls())
library(SpaDES)
library(raster)
library(data.table)
library(dplyr)
objects <- list(studyArea = "a",
successionTimeStep = 4)
parameters <- list()
times <- list(start = 0, end = 8)
modules <- list("landWebParent")
path <- list(modulePath = file.path("~/GitHub/LandWeb"),
outputPath="~/output")
mySim <- simInit(times=times, params=parameters, modules=modules,
objects=objects, paths=path)
NAdata
NAdata
simulationMaps
saveRDS(simulationMaps$ecoregionMap, file.path(dataPath, "ecoregionMap.rds"))
write.csv(simulationMaps$ecoregion, file.path(dataPath, "ecoregiontable.csv"),row.names = F)
saveRDS(simulationMaps$initialCommunityMap, file.path(dataPath, "initialCommunityMap.rds"))
simulationMaps$initialCommunityMap
simulationMaps$ecoregionMap
canProcessInMemory(simulationMaps$ecoregionMap)
a <- readAll(simulationMaps$initialCommunityMap)
a
saveRDS(a, file.path(dataPath, "initialCommunityMap.rds"))
write.csv(simulationMaps$initialCommunity, file.path(dataPath, "initialcommunitytable.csv"),row.names = F)
nrow(NAdata) > 1
source('~/GitHub/landwebNRV/landwebNRV/R/biomassAttributes_kNN_biggerEcoAddition.R')
#
biomassFrombiggerMap <- biomassAttributes_kNN_biggerEcoAddition(speciesLayers = specieslayers,
biomassLayer = biomassMap,
SALayer = standAgeMap,
ecoregionMap = simulationMaps$ecoregionMap,
biggerEcoMap = ecoRegion,
NAData = NAdata)
NON_NAdata <- rbind(NON_NAdata, biomassFrombiggerMap$addData[!is.na(maxBiomass), .(ecoregion, species, maxBiomass, maxANPP, SEP)])
NAdata <- biomassFrombiggerMap$addData[is.na(maxBiomass),.(ecoregion, species, maxBiomass, maxANPP, SEP)]
NAdata
NON_NAdata
source('~/GitHub/landwebNRV/landwebNRV/R/biomassAttributes_kNN_biggerEcoAddition.R')
biomassFrombiggerMap <- biomassAttributes_kNN_biggerEcoAddition(speciesLayers = specieslayers,
biomassLayer = biomassMap,
SALayer = standAgeMap,
ecoregionMap = simulationMaps$ecoregionMap,
biggerEcoMap = ecoZone,
NAData = NAdata)
biggerEcoMapRaster
subbiggerEcoMap_Raster
subbiggerEcoLevel
subbiggerEcoMap
subbiggerEcoLevel <- unique(subbiggerEcoMap@data$ECOREGION)
subbiggerEcoLevel
biggerEcoMap
ecoregionMap
subEcoregion[!(getValues(subEcoregion) %in% unique(NAData$ecoregion))] <- NA
subEcoregion
subEcoregion
biggerEcoMap
subbiggerEcoMap <- raster::crop(biggerEcoMap, subEcoregion)
subbiggerEcoMap
subbiggerEcoMap@data
names(ecoZone@data)
ecoZone <- raster::shapefile(file.path(dataPath, "ecozones.shp"))
rm(list=ls())
dataPath <- "~/GitHub/LandWeb/landWebParent/data"
specieslayers <- readRDS(file.path(dataPath, "specieslayers.rds"))
specieslayers <- stack()
speciesnames <- c("Abie_Bal", "Abie_Las",
"Betu_Pap", "Pice_Gla", "Pice_Mar",
"Pinu_Ban", "Pinu_Con", "Pinu_Str",
"Popu_Tre", "Pseu_Men")
i <- 1
for(indispecies in speciesnames){
# if(!all(paste("NFI_MODIS250m_kNN_Species_", indispecies, "_v0.tif",
#               c("",".aux.xml", ".xml"), sep = "") %in% checkContent_passed)){
#   untar(file.path(dataPath, "kNN-Species.tar"),
#         files = paste("NFI_MODIS250m_kNN_Species_", indispecies, "_v0.zip",
#                       sep = ""),
#         exdir = dataPath)
#   unzip(file.path(dataPath, paste("NFI_MODIS250m_kNN_Species_", indispecies, "_v0.zip",
#                                   sep = "")),
#         exdir = dataPath)
#   file.remove(file.path(dataPath, paste("NFI_MODIS250m_kNN_Species_", indispecies, "_v0.zip",
#                                         sep = "")))
#
# }
speciesmap <- raster(file.path(dataPath, paste("NFI_MODIS250m_kNN_Species_", indispecies,
"_v0.tif", sep = "")))
specieslayers <- stack(specieslayers, speciesmap)
names(specieslayers)[i] <- indispecies
i <- i+1
}
specieslayers
standAgeMap <- raster(file.path(dataPath, "NFI_MODIS250m_kNN_Structure_Stand_Age_v0.tif"))
biomassMap <- raster(file.path(dataPath, "NFI_MODIS250m_kNN_Structure_Biomass_TotalLiveAboveGround_v0.tif"))
ls()
simulationMaps <- list()
simulationMaps$ecoregionMap <- readRDS(file.path(dataPath, ecoregionMap.rds))
simulationMaps$ecoregionMap <- readRDS(file.path(dataPath, "ecoregionMap.rds"))
simulationMaps
specieslayers
source('~/GitHub/landwebNRV/landwebNRV/R/biomassAttributes_kNN.R')
speciesEcoregionTable <- biomassAttributes_kNN(speciesLayers = specieslayers,
biomassLayer = biomassMap,
SALayer = standAgeMap,
ecoregionMap = simulationMaps$ecoregionMap)
source('~/GitHub/landwebNRV/landwebNRV/R/speciesRelativeAbundance_kNN.R')
speciesSEP <- speciesRelativeAbundance_kNN(ecoregionMap = simulationMaps$ecoregionMap,
speciesLayers = specieslayers)
#
speciesSEP
septable <- speciesSEP$speciesAbundanceTable
names(septable) <- c("ecoregion", "species", "SEP")
septable[, SEP:=round(SEP, 2)]
speciesEcoregionTable <- left_join(speciesEcoregionTable, septable, by = c("ecoregion", "species")) %>%
data.table
speciesEcoregionTable
speciesEcoregionTable
speciesEcoregionTable[SEP==0, ':='(maxBiomass = 0, maxANPP = 0)]
speciesEcoregionTable
NON_NAdata <- speciesEcoregionTable[!is.na(maxBiomass),]
NON_NAdata
NAdata <- speciesEcoregionTable[is.na(maxBiomass),]
NAdata
ecoRegion
ecoRegion <- raster::shapefile(file.path(dataPath, "ecoregions.shp"))
ecoZone <- raster::shapefile(file.path(dataPath, "ecozones.shp"))
source('~/GitHub/landwebNRV/landwebNRV/R/biomassAttributes_kNN_biggerEcoAddition.R')
#
biomassFrombiggerMap <- biomassAttributes_kNN_biggerEcoAddition(speciesLayers = specieslayers,
biomassLayer = biomassMap,
SALayer = standAgeMap,
ecoregionMap = simulationMaps$ecoregionMap,
biggerEcoMap = ecoRegion,
NAData = NAdata)
NON_NAdata <- rbind(NON_NAdata, biomassFrombiggerMap$addData[!is.na(maxBiomass), .(ecoregion, species, maxBiomass, maxANPP, SEP)])
NAdata <- biomassFrombiggerMap$addData[is.na(maxBiomass),.(ecoregion, species, maxBiomass, maxANPP, SEP)]
NAdata
NON_NAdata
write.csv(NAdata,file.path(dataPath, "nadata.csv"),row.names=F)
write.csv(NON_NAdata,file.path(dataPath, "nonnadata.csv"),row.names=F)
names(ecoZone@data)[grep("ECOZONE",names(ecoZone@data))] <- "ECOREGION"
biomassFrombiggerMap <- biomassAttributes_kNN_biggerEcoAddition(speciesLayers = specieslayers,
biomassLayer = biomassMap,
SALayer = standAgeMap,
ecoregionMap = simulationMaps$ecoregionMap,
biggerEcoMap = ecoZone,
NAData = NAdata)
NON_NAdata <- rbind(NON_NAdata, biomassFrombiggerMap$addData[!is.na(maxBiomass), .(ecoregion, species, maxBiomass, maxANPP, SEP)])
NAdata <- biomassFrombiggerMap$addData[is.na(maxBiomass),.(ecoregion, species, maxBiomass, maxANPP, SEP)]
NAdata
NON_NAdata
speciesLayers
specieslayers
Betu_Pap <- subset(specieslayers, "Betu_Pap")
dev(4)
plot(Betu_Pap)
write.csv(NON_NAdata,file.path(dataPath, "nonnadata.csv"),row.names=F)
write.csv(NAdata,file.path(dataPath, "nadata.csv"),row.names=F)
NAdata[,':='(maxBiomass=0, maxANPP=0, SEP=0)]
NAdata
write.csv(NAdata,file.path(dataPath, "speciesEcoregionTable.csv"),row.names=F)
NAdata
NON_NAdata
write.csv(rbind(NON_NAdata,NAdata),file.path(dataPath, "speciesEcoregionTable.csv"),row.names=F)
alldata <- rbind(NON_NAdata,NAdata)
alldata
length(unique(alldata$ecoregion))
speciesEcoregionTable
rm(list=ls())
dataPath <- "~/GitHub/LandWeb/landWebParent/data"
ecoregionMap <- readRDS(file.path(dataPath, "ecoregionMap.rds"))
dev(4)
Plot(ecoregionMap)
speciesEcoregionTable <- read.csv(file.path(dataPath, "speciesEcoregionTable.csv"), header = T,
stringsAsFactors = F) %>%
data.table
maxBiomassMaps <- stack()
maxANPPMaps <- stack()
maxSEPMaps <- stack()
ecoregionMap
specieses <- unique(speciesEcoregionTable$species)
specieses
ecoregionMapTable <- data.table(pixelindex=1:ncell(ecoregionMap),
ecoregion=getValues(ecoregionMap))[!is.na(ecoregion),]
ecoregionMapTable
specieses <- sort(unique(speciesEcoregionTable$species))
indispecies <- species'[1'
indispecies <- specieses[1]
indispeciesEcotable <- speciesEcoregionTable[species==indispecies,]
indispeciesEcotable
unique(indispeciesEcotable, "ecoregion")
unique(indispeciesEcotable, by = "ecoregion")
ecoregionMapTable <- setkey(ecoregionMapTable, ecoregion)[setkey(indispeciesEcotable, ecoregion),
nomatch = 0]
ecoregionMapTable
maxBmap <- ecoregionMap
maxANPPmap <- ecoregionMap
maxsepmap <- ecoregionMap
maxBmap[ecoregionMapTable$pixelindex] <- maxBiomass
maxBmap[ecoregionMapTable$pixelindex] <- ecoregionMapTable$maxBiomass
names(maxBmap)
names(ecoregionMap) <- indispecies
maxBmap <- ecoregionMap
names(maxBmap)
maxBmap[ecoregionMapTable$pixelindex] <- ecoregionMapTable$maxBiomass
names(maxBmap)
maxBiomassMaps <- stack()
maxANPPMaps <- stack()
maxSEPMaps <- stack()
specieses <- sort(unique(speciesEcoregionTable$species))
for(indispecies in specieses){
ecoregionMapTable <- data.table(pixelindex=1:ncell(ecoregionMap),
ecoregion=getValues(ecoregionMap))[!is.na(ecoregion),]
indispeciesEcotable <- speciesEcoregionTable[species==indispecies,]
ecoregionMapTable <- setkey(ecoregionMapTable, ecoregion)[setkey(indispeciesEcotable, ecoregion),
nomatch = 0]
names(ecoregionMap) <- indispecies
tempmap <- ecoregionMap
tempmap[ecoregionMapTable$pixelindex] <- ecoregionMapTable$maxBiomass
maxBiomassMaps <- stack(maxBiomassMaps, tempmap)
tempmap[ecoregionMapTable$pixelindex] <- ecoregionMapTable$maxANPP
maxBiomassMaps <- stack(maxBiomassMaps, tempmap)
tempmap[ecoregionMapTable$pixelindex] <- ecoregionMapTable$SEP
maxBiomassMaps <- stack(maxBiomassMaps, tempmap)
}
maxBiomassMaps <- stack()
maxANPPMaps <- stack()
maxSEPMaps <- stack()
specieses <- sort(unique(speciesEcoregionTable$species))
for(indispecies in specieses){
ecoregionMapTable <- data.table(pixelindex=1:ncell(ecoregionMap),
ecoregion=getValues(ecoregionMap))[!is.na(ecoregion),]
indispeciesEcotable <- speciesEcoregionTable[species==indispecies,]
ecoregionMapTable <- setkey(ecoregionMapTable, ecoregion)[setkey(indispeciesEcotable, ecoregion),
nomatch = 0]
names(ecoregionMap) <- indispecies
tempmap <- ecoregionMap
tempmap[ecoregionMapTable$pixelindex] <- ecoregionMapTable$maxBiomass
maxBiomassMaps <- stack(maxBiomassMaps, tempmap)
tempmap[ecoregionMapTable$pixelindex] <- ecoregionMapTable$maxANPP
maxANPPMaps <- stack(maxANPPMaps, tempmap)
tempmap[ecoregionMapTable$pixelindex] <- ecoregionMapTable$SEP
maxSEPMaps <- stack(maxSEPMaps, tempmap)
}
dev(4)
Plot(maxBiomassMaps)
maxBiomassMaps
clearPlot()
Plot(maxBiomassMaps)
saveRDS(maxBiomassMaps, file.path(dataPath, "maxBiomassMaps.rds"))
clearPlot()
Plot(maxANPPMaps)
clearPlot()
Plot(maxBiomassMaps)
clearPlot()
Plot(maxANPPMaps)
saveRDS(maxANPPMaps, file.path(dataPath, "maxANPPMaps.rds"))
clearPlot()
Plot(maxSEPMaps)
saveRDS(maxSEPMaps, file.path(dataPath, "SEPMaps.rds"))
rm(list = ls())
dataPath <- "~/GitHub/LandWeb/landWebParent/data"
initialCommMap <- readRDS(file.path(dataPath, "initialCommunityMap.rds"))
speciesEcoregionTable <- readRDS(file.path(dataPath, "speciesEcoregionTable.rds"))
initialCommMap
spplited <- splitRaster(initialCommMap, nx = 10, ny = 10, buffer = 100)
spplited
spplited <- splitRaster(initialCommMap, nx = 5, ny = 5, buffer = 100)
spplited
Plot(spplited)
clearPlot()
Plot(spplited)
Plot(spplited[1])
Plot(spplited[[1]])
mergeRaster(spplited)
spplited <- splitRaster(initialCommMap, nx = 5, ny = 5, buffer = 100)
mergeRaster(spplited)
dd <- mergeRaster(spplited)
dev(4)
Plot(dd)
dd
initialCommMap
names(initialCommMap) <- "initialCommunityiesMap"
spplited <- splitRaster(initialCommMap, nx = 5, ny = 5, buffer = 100)
ecoregionMap <- readRDS(file.path(dataPath, "ecoregionMap.rds"))
names(ecoregionMap) <- "ecoregionMap"
spplited <- splitRaster(ecoregionMap, nx = 5, ny = 5, buffer = 100)
